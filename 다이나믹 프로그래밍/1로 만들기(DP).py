'''
문제
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

입력
첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.

출력
첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
'''
# 다이나믹 프로그래밍(Dynamic Programming, DP)
# -> 여러 개의 하위 문제를 먼저 푼 후 그 결과를 쌓아 올려 주어진 문제를 해결하는 알고리즘 

# 1. 테이블 정의하기: D[i] = i를 1로 만들기 위해 필요한 연산 사용 횟수의 최솟값
# 2. 점화식 찾기: D[12] = ?
#   3으로 나누거나(D[12]=D[4]+1)
#   2로 나누거나(D[12]=D[6]+1)
#   1을 빼거나(D[12]=D[11]+1)
#   D[12] = min(D[4] + 1, D[6] + 1, D[11] + 1)
# 3. 초기값 정의하기: D[1] = 0

import sys
N = int(sys.stdin.readline())
find_n = [0 for _ in range(N+1)]

for i in range(2,N+1):
    find_n[i] = find_n[i-1]+1
    if i % 2 == 0:
        find_n[i] = min(find_n[i], find_n[int(i/2)] + 1)
    if i % 3 == 0:
        find_n[i] = min(find_n[i], find_n[int(i/3)] + 1)
print(find_n[N])
'''
예제 입력 1 
2
예제 출력 1 
1
예제 입력 2 
10
예제 출력 2 
3
'''