# 귀납적 사고
# func1(k)가 k k-1 k-2 ... 1을 출력하면
# func1(k+1)은 k+1 k k-1 ... 1 을 출력
def func1(n):
    if n == 0:
        return
    print(n)
    func1(n-1)
func1(5)


# 재귀 함수의 조건
# 특정 입력에 대해서는 자기 자신을 호출하지 않고 종료되어야 함 = Base condition
# 모든 입력은 base condition으로 수렴해야 함
# func1은 n = 0일때 자기 자신을 호출하지 않고 종료되므로 이것이(n) base condition


'''
재귀에 대한 정보 1
함수의 인자로 어떤 것을 받고 어디까지 계산한 후 자기 자신에게 넘겨줄지 명확하게 정해야 함
모든 재귀 함수는 반복문만으로 동일한 동작을 하는 함수를 만들 수 있음
재귀는 반복문으로 구현햇을 때에 비해 코드가 간결하지만 메모리/시간에서는 손해를 봄
'''

'''
재귀에 대한 정보 2
한 함수가 자기 자신을 여러 번 호출하게 되면 비효율적일 수 있음
int fibo(int n):
    if n <= 1:
        return 1
    return fibo(n-1)+fibo(n-2) # 매우 별로인 코드 -> 이미 계산한 것을 또 계산하게 됨(시간 복잡도 극대화)
'''

'''
재귀에 대한 정보 3
재귀함수가 자기 자신을 부를 때 스택 영역에 계속 누적이 됨
'''
